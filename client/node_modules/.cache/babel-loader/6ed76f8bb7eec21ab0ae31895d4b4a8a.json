{"ast":null,"code":"var _jsxFileName = \"/Users/Kyle/Documents/React/react-streams/client/src/components/GoogleAuth.js\";\nimport React from 'react'; // Google API Client Docs\n// https://developers.google.com/identity/sign-in/web/reference\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n  }\n\n  componentDidMount() {\n    //available on window scope\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '779720330212-i9s8bq8582vt922bb3btj9vpchtn4non.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"I dont know if I am signed in\");\n    } else if (this.state.isSignedIn) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"I am signed in!\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"I am not signed in\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/Kyle/Documents/React/react-streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD+B;AAAA;;AAGvCC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGKC,IAHL,CAGU,MAAM;AACZ,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAE,KAAKU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AAAd,SAAd;AACD,OANH;AAOD,KARD;AASD;;AAEDC,EAAAA,gBAAgB,GAAG;AACjB,QAAG,KAAKhB,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAmC;AACjC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD,KAFD,MAEO,IAAG,KAAKD,KAAL,CAAWC,UAAd,EAA0B;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD,KAFM,MAEA;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;AACF;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACD;;AA5BsC;;AA+BzC,eAAelB,UAAf","sourcesContent":["import React from 'react';\n\n// Google API Client Docs\n// https://developers.google.com/identity/sign-in/web/reference\nclass GoogleAuth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    //available on window scope\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n          clientId: '779720330212-i9s8bq8582vt922bb3btj9vpchtn4non.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n        });\n    });\n  }\n\n  renderAuthButton() {\n    if(this.state.isSignedIn === null) {\n      return <div>I dont know if I am signed in</div>;\n    } else if(this.state.isSignedIn) {\n      return <div>I am signed in!</div>;\n    } else {\n      return <div>I am not signed in</div>;\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}